/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this  template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author BaZinGa
 */
public class Starter extends javax.swing.JFrame {

    /**
     * Creates new form Starter
     * @throws java.io.IOException
     */
    public Starter() throws IOException {
        this.setResizable(false);
        this.setUndecorated(true);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        initComponents();
        Dimension dimension=Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dimension.width/2-this.getSize().width/2, (dimension.height/2-this.getSize().height/2));
        try {                
           image = ImageIO.read(new File("recruitment-process-outsourcing"));
        } catch (IOException ex) {
             // handle exception...
        }

        this.progressBar.setValue(0);
        progressBar.setStringPainted(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar(0,100);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 0));

        jPanel2.setBackground(new java.awt.Color(255, 255, 0));

        statusLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(0, 0, 153));
        statusLabel.setText("Loading Components...");

        progressBar.setBackground(new java.awt.Color(0, 0, 0));
        progressBar.setForeground(new java.awt.Color(102, 255, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void createServer() throws InterruptedException
    {
        try{
            String command="startServer.bat";
            this.process = Runtime.getRuntime().exec(command);
            System.out.println(command);
        }catch (IOException ex) {
                Logger.getLogger(Starter.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int i=this.complete;i<50;++i){
            this.progressBar.setValue(i);
            this.complete=i;
            TimeUnit.MILLISECONDS.sleep(20);
        }
        this.statusLabel.setText("Server Started...");
    }
    
    public void stopServer(){
        String command="stopServer.bat";
        System.out.println(command);
        try{
            this.process = Runtime.getRuntime().exec(command);
            System.out.println("Server Shutdown...");
        }catch(IOException iOException){
            JOptionPane.showMessageDialog(this, iOException.toString());
        } 
    }
    
    public void startLoginFrame(){
        LoginScreen loginScreen = new LoginScreen(this);
        loginScreen.setVisible(true);
        this.setVisible(false);
    }
    public static void main(String args[]) throws IOException, InterruptedException {
        Starter starter=new Starter();
        starter.setVisible(true);
        for(int i=starter.complete;i<25;++i){
            starter.progressBar.setValue(i);
            starter.complete=i;
            TimeUnit.MILLISECONDS.sleep(20);
        }
        starter.statusLabel.setText("Starting Server...");
        starter.createServer();
        starter.statusLabel.setText("Loading Login Screen...");
        for(int i=starter.complete;i<75;++i){
            starter.progressBar.setValue(i);
            starter.complete=i;
            TimeUnit.MILLISECONDS.sleep(20);
        }
        for(int i=starter.complete;i<100;++i){
            starter.progressBar.setValue(i);
            starter.complete=i;
            TimeUnit.MILLISECONDS.sleep(15);
        }
        starter.startLoginFrame();
    }
    private int complete=0;
    private BufferedImage image;
    private Process process; 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
